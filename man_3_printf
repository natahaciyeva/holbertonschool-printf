.TH _PRINTF 3 "August 2025" "Holberton School" "Library Functions Manual"
.SH NAME
_printf \- custom implementation of the standard printf function
.SH SYNOPSIS
.B #include "main.h"
.br
.BI "int _printf(const char *" format ", ...);"
.SH DESCRIPTION
The
.B _printf()
function produces output according to a format string, similar to the
standard C library function
.BR printf (3).

Output is written to the standard output stream
.BR stdout .
The
.I format
string is composed of zero or more characters to be printed verbatim
and conversion specifiers that determine how subsequent arguments are
converted for output.

The conversion specifiers handled are:

.TP
.B %c
Prints a single character.

.TP
.B %s
Prints a null-terminated string. If the string argument is NULL,
"(null)" is printed.

.TP
.B %%
Prints a literal '%' character.

.TP
.B %d, %i
Prints a signed decimal integer.

.PP
The following features of the standard
.B printf
function are
.I not
implemented:
flags, field width, precision, length modifiers, and buffer handling.
.SH RETURN VALUE
The
.B _printf()
function returns the number of characters printed, excluding the
terminating null byte.
On error, a negative value is returned.
.SH EXAMPLES
.EX
_printf("Hello %s!\\n", "Natish");
_printf("Character: %c\\n", 'A');
_printf("Percent: %%\\n");
_printf("Integer: %d\\n", 1234);
.EE
The above code produces the following output:
.EX
Hello Natish!
Character: A
Percent: %
Integer: 1234
.EE
.SH SEE ALSO
.BR printf (3),
.BR write (2)
.SH AUTHOR
Written by Holberton School students as part of the printf project.
